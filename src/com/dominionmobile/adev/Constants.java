
	/**
	 *	  ADev is a lightweight Android development tool
	 *
	 *	  Copyright (c) 2013 - 2022 Joseph Siebenmann
	 *
	 *    This program is free software: you can redistribute it and/or modify
	 *    it under the terms of the GNU General Public License as published by
	 *    the Free Software Foundation; version 2.
	 *
	 *    This program is distributed in the hope that it will be useful,
	 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
	 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	 *    GNU General Public License for more details.
	 *
	 *    You should have received a copy of the GNU General Public License
	 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
	 */

package com.dominionmobile.adev;

public interface Constants
{
	int TAG_ARRAY = 91;			// '['
	int TAG_BYTE = 66;			// 'B'
	int TAG_CHAR = 67;			// 'C'
	int TAG_OBJECT = 76;		// 'L'
	int TAG_FLOAT = 70;			// 'F'
	int TAG_DOUBLE = 68;		// 'D'
	int TAG_INT = 73;			// 'I'
	int TAG_LONG = 74;			// 'J'
	int TAG_SHORT = 83;			// 'S'
	int TAG_VOID = 86;			// 'V'
	int TAG_BOOLEAN = 90;		// 'Z'
	int TAG_STRING = 115;		// 's'
	int TAG_THREAD = 116;			// 't'
	int TAG_THREAD_GROUP = 103;		// 'g'
	int TAG_CLASS_LOADER = 108;		// 'l'
	int TAG_CLASS_OBJECT = 99;		// 'c'
	int TAG_NO = 0;
	
	int EVENT_KIND_SINGLE_STEP = 1;
	int EVENT_KIND_BREAKPOINT = 2;
	int EVENT_KIND_FRAME_POP = 3;
	int EVENT_KIND_EXCEPTION = 4;
	int EVENT_KIND_USER_DEFINED = 5;
	int EVENT_KIND_THREAD_START = 6;
	int EVENT_KIND_THREAD_DEATH = 7;
	int EVENT_KIND_CLASS_PREPARE = 8;
	int EVENT_KIND_CLASS_UNLOAD = 9;
	int EVENT_KIND_CLASS_LOAD = 10;
	int EVENT_KIND_FIELD_ACCESS = 20;
	int EVENT_KIND_FIELD_MODIFICATION = 21;
	int EVENT_KIND_EXCEPTION_CATCH = 30;
	int EVENT_KIND_METHOD_ENTRY = 40;
	int EVENT_KIND_METHOD_EXIT = 41;
	
	int EVENT_KIND_METHOD_EXIT_WITH_RETURN_VALUE = 42;	// Not listed..
	int EVENT_KIND_MONITOR_CONTENDED_ENTER = 43;
	int EVENT_KIND_MONITOR_CONTENDED_ENTERED = 44;
	int EVENT_KIND_MONITOR_WAIT = 45;
	int EVENT_KIND_MONITOR_WAITED = 46;
	
	int EVENT_KIND_VM_INIT = 90;
	int EVENT_KIND_VM_DEATH = 99; 
	int EVENT_KIND_VM_DISCONNECTED = 100;	// Never sent..
	int EVENT_KIND_VM_START = 90;			// From JdwpConstants.h
	

	// 'modKind' Switch/Case number for EventRequest..	
	int MOD_KIND_COUNT = 1;
	int MOD_KIND_CONDITIONAL = 2;
	int MOD_KIND_THREAD_ONLY = 3;
	int MOD_KIND_CLASS_ONLY = 4;
	int MOD_KIND_CLASS_MATCH = 5;
	int MOD_KIND_CLASS_EXCLUDE = 6;
	int MOD_KIND_LOCATION_ONLY = 7;
	int MOD_KIND_EXCEPTION_ONLY = 8;
	int MOD_KIND_FIELD_ONLY = 9;
	int MOD_KIND_STEP = 10;
	int MOD_KIND_INSTANCE_ONLY = 11;

	// Access flags
	int ACC_PUBLIC = 0x0001;
	int ACC_PRIVATE = 0x0002;
	int ACC_PROTECTED = 0x0004;
	int ACC_STATIC = 0x0008;
	int ACC_FINAL = 0x0010;
	int ACC_SUPER = 0x0020;		// From JVM
	int ACC_VOLATILE = 0x0040;
	int ACC_TRANSIENT = 0x0080;
	int ACC_INTERFACE = 0x0200;		// From JVM
	int ACC_ABSTRACT = 0x0400;		// From JVM
	int ACC_SYNTHETIC = 0x1000;		// From JVM
	int ACC_ANNOTATION = 0x2000;	// From JVM
	int ACC_ENUM = 0x4000;			// From JVM
	
	// SuspendPolicy..	
	int SUSPEND_THREAD_NONE = 0;
	int SUSPEND_THREAD_EVENT_THREAD = 1;
	int SUSPEND_THREAD_ALL = 2;

	// StepSize..	
	int STEP_SIZE_MIN = 0;
	int STEP_SIZE_LINE = 1;

	// StepDepth..	
	int STEP_DEPTH_INTO = 0;
	int STEP_DEPTH_OVER = 1;
	int STEP_DEPTH_OUT = 2;
	
	// Thread Status..	
	int THREAD_STATUS_ZOMBIE = 0;
	int THREAD_STATUS_RUNNING = 1;
	int THREAD_STATUS_SLEEPING = 2;
	int THREAD_STATUS_MONITOR = 3;
	int THREAD_STATUS_WAIT = 4;
	
	int ERROR_NONE = 0;
	int ERROR_INVALID_THREAD = 10;
	int ERROR_INVALID_THREAD_GROUP = 11;
	int ERROR_INVALID_PRIORITY = 12;
	int ERROR_THREAD_NOT_SUSPENDED = 13;
	int ERROR_THREAD_SUSPENDED = 14;
	int ERROR_THREAD_NOT_ALIVE = 15;
	int ERROR_INVALID_OBJECT = 20;
	int ERROR_INVALID_CLASS = 21;
	int ERROR_CLASS_NOT_PREPARED = 22;
	int ERROR_INVALID_METHOD_ID = 23;
	int ERROR_INVALID_LOCATION = 24;
	int ERROR_INVALID_FIELD_ID = 25;
	int ERROR_INVALID_FRAME_ID = 30;
	int ERROR_NO_MORE_FRAMES = 31;
	int ERROR_OPAQUE_FRAME = 32;
	int ERROR_NOT_CURRENT_FRAME = 33;
	int ERROR_TYPE_MISMATCH = 34;
	int ERROR_NVALID_SLOT = 35;
	int ERROR_DUPLICATE = 40;
	int ERROR_NOT_FOUND = 41;
	int ERROR_INVALID_MONITOR = 50;
	int ERROR_NOT_MONITOR_OWNER = 51;
	int ERROR_INTERRUPT = 52;
	int ERROR_INVALID_CLASS_FORMAT = 60;
	int ERROR_CIRCULAR_CLASS_DEFINITION = 61;
	int ERROR_FAILS_VERIFICATION = 62;
	int ERROR_ADD_METHOD_NOT_IMPLEMENTED = 63;
	int ERROR_SCHEMA_CHANGE_NOT_IMPLEMENTED = 64;
	int ERROR_INVALID_TYPESTATE = 65;
	int ERROR_HIERARCHY_CHANGE_NOT_IMPLEMENTED = 66;
	int ERROR_DELETE_METHOD_NOT_IMPLEMENTED = 67;
	int ERROR_UNSUPPORTED_VERSION = 68;
	int ERROR_NAMES_DONT_MATCH = 69;
	int ERROR_CLASS_MODIFIERS_CHANGE_NOT_IMPLEMENTED = 70;
	int ERROR_METHOD_MODIFIERS_CHANGE_NOT_IMPLEMENTED = 71;
	int ERROR_NOT_IMPLEMENTED = 99;
	int ERROR_NULL_POINTER = 100;
	int ERROR_ABSENT_INFORMATION = 101;
	int ERROR_INVALID_EVENT_TYPE = 102;
	int ERROR_ILLEGAL_ARGUMENT = 103;
	int ERROR_OUT_OF_MEMORY = 110;
	int ERROR_ACCESS_DENIED = 111;
	int ERROR_VM_DEAD = 112;
	int ERROR_INTERNAL = 113;
	int ERROR_UNATTACHED_THREAD = 115;
	int ERROR_INVALID_TAG = 500;
	int ERROR_ALREADY_INVOKING = 502;
	int ERROR_INVALID_INDEX = 503;
	int ERROR_INVALID_LENGTH = 504;
	int ERROR_INVALID_STRING = 506;
	int ERROR_INVALID_CLASS_LOADER = 507;
	int ERROR_INVALID_ARRAY = 508;
	int ERROR_TRANSPORT_LOAD = 509;
	int ERROR_TRANSPORT_INIT = 510;
	int ERROR_NATIVE_METHOD = 511;
	int ERROR_INVALID_COUNT = 512;


	int INVOKE_OPTIONS_INVOKE_SINGLE_THREADED = (byte)0x01;
	int INVOKE_OPTIONS_INVOKE_NONVIRTUAL = (byte)0x02;
	
	int COMMAND_VERSION = 1;
	int COMMAND_CLASSES_BY_SIGNATURE = 2;
	int COMMAND_ALL_CLASSES = 3;			// ERROR_NOT_IMPLEMENTED ?
	int COMMAND_ALL_THREADS = 4;
	int COMMAND_IDSIZES = 7;
	int COMMAND_NAME = 1;
	int COMMAND_CAPABILITIES = 12;
	int COMMAND_CAPABILITIES_NEW = 17;
	int COMMAND_ALL_CLASSES_WITH_GENERIC = 20;
	int	COMMAND_METHODS = 5;
	int COMMAND_SIGNATURE = 1;
	int COMMAND_METHODS_WITH_GENERIC = 15;
	int COMMAND_LINE_TABLE = 1;
	int COMMAND_SET = 1;
	//int COMMAND_VARIABLE_TABLE = 2;
	int COMMAND_VARIABLE_TABLE_WITH_GENERIC = 5;
	int COMMAND_FIELDS = 4;		// ERROR_NOT_IMPLEMENTED
	int COMMAND_FIELDS_WITH_GENERIC = 14;
	int COMMAND_GET_VALUES = 6;
	int COMMAND_GET_VALUES_OBJECT = 2;
	int COMMAND_GET_VALUES_FRAME = 1;
	int COMMAND_FRAME_COUNT = 7;
	int COMMAND_FRAMES = 6;
	int COMMAND_SOURCE_FILE = 7;
	int COMMAND_SUSPEND = 2;
	int COMMAND_RESUME_THREAD = 3;	// ThreadReference
	int COMMAND_VALUE = 1;
	int COMMAND_RESUME_VM = 9;		// VirtualMachine
	int COMMAND_STATUS = 4;
	int COMMAND_SUSPEND_COUNT = 12;
	int COMMAND_LENGTH = 1;
	int COMMAND_GET_VALUES_ARRAY = 2;
	int COMMAND_CLEAR = 2;
	int COMMAND_CLEAR_ALL_BREAKPOINTS = 3;
	int COMMAND_THIS_OBJECT = 3;
	int COMMAND_SET_VALUES_STATIC = 2;
	int COMMAND_SET_VALUES_LOCAL = 2;
	int COMMAND_SET_VALUES_INSTANCE = 3;
	int COMMAND_REFERENCE_TYPE = 1;
	int COMMAND_INSTANCES = 16;
	int COMMAND_CLASS_OBJECT = 11;
	int COMMAND_CREATE_STRING = 11;
	int COMMAND_DISPOSE = 6;
	
	
	
	// Command Set	
	int COMMAND_SET_VIRTUAL_MACHINE = 1;
	int COMMAND_SET_REFERENCE_TYPE = 2;
	int COMMAND_SET_CLASS_TYPE = 3;
	//int COMMAND_SET_INTERFACE_TYPE = 5;	// No commands..
	int COMMAND_SET_METHOD = 6;
	int COMMANS_SET_OBJECT_REFERENCE = 9;
	int COMMAND_SET_STRING_REFERENCE = 10;
	int COMMAND_SET_THREAD_REFERENCE = 11;
	int COMMAND_SET_ARRAY_REFERENCE = 13;
	int COMMAND_SET_EVENT_REQUEST = 15;
	int COMMAND_SET_STACK_FRAME = 16;

	
	// Type Tag..	
	int TYPE_TAG_CLASS = 1;
	int TYPE_TAG_INTERFACE = 2;
	int TYPE_TAG_ARRAY = 3;

	
	// Tag Constants..	
	int REF_TYPE_ARRAY = 91;	// objectID size
	int REF_TYPE_BYTE = 66;		// 1 byte
	int REF_TYPE_CHAR = 67;		// 2 bytes
	int REF_TYPE_OBJECT = 76;	// objectID size
	int REF_TYPE_FLOAT = 70;	// 4 bytes
	int REF_TYPE_DOUBLE = 68;	// 8 bytes
	int REF_TYPE_INT = 73;		// 4 bytes
	int REF_TYPE_LONG = 74;		// 8 bytes
	int REF_TYPE_SHORT = 83;	// 2 bytes
	int REF_TYPE_VOID = 86;		// 0 bytes
	int REF_TYPE_BOOLEAN = 90;	// 1 byte
	int REF_TYPE_STRING = 115;	// objectID size
	int REF_TYPE_THREAD = 116;			// objectID size
	int REF_TYPE_THREAD_GROUP = 103;	// objectID size
	int REF_TYPE_CLASS_LOADER = 108;	// objectID size
	int REF_TYPE_CLASS_OBJECT = 99;	// objectID size
	int REF_TYPE_REFERENCE_TYPE_ID = 999;
	int REF_TYPE_METHOD_ID = 998;
	int REF_TYPE_FIELD_ID = 997;
	int REF_TYPE_FRAME_ID = 996;
	int REF_TYPE_OBJECT_ID = 995;

	// ClassStatus..
	int CLASS_STATUS_VERIFIED = 1;
	int CLASS_STATUS_PREPARED = 2;
	int CLASS_STATUS_INITIALIZED = 4;
	int CLASS_STATUS_ERROR = 8;
	
	boolean NO_TIMEOUT = false;
	boolean USE_TIMEOUT = true;
	
	int CLASS_VARIABLE = 1;
	int LOCAL_VARIABLE = 0;
	
	int GET = 0;
	int PUT = 1;
	int QUERY = 2;
	int REMOVE = 3;
	
	int TRUE = 1;
	int FALSE = 0;
	
	int LOCAL = 0;
	int STATIC = 1;
	
	int PORT_NUMBER = 22345;
	
	int WAIT_SLEEP = 25;
	int WAIT_TIMEOUT = 750;
	int TIME_TIMEOUT = 3000;
	int TIME_SHORT_TIMEOUT = 2000;
	int REPLY_NORMAL_TIMEOUT = 3000;
	int REPLY_LONGER_TIMEOUT = 4000;
	int REPLY_SHORT_TIMEOUT = 2000;
	int REPLY_VERY_LONG_TIMEOUT = 10000;
	int REPLY_REALLY_LONG_TIMEOUT = 20000;

	int BOOLEAN_SIZE = 1;
	int BYTE_SIZE = 1;
	int CHAR_SIZE = 1;
	int SHORT_SIZE = 2;
	int INT_SIZE = 4;
	int LONG_SIZE = 8;

	int LENGTH_INDEX = 0;
	int ID_INDEX = 4;
	int FLAGS_INDEX = 8;
	int ERROR_CODE_INDEX = 9;
	int COMMAND_SET_INDEX = 9;
	int COMMAND_INDEX = 10;
	int REPLY_PACKET_FLAG = 0x80;
	
	int HEADER_SIZE = 11;
	int ERROR_CODE_SIZE = 2;
	
}

